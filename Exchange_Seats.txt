626. Exchange Seats
Solved
Medium
Topics
Companies
SQL Schema
Pandas Schema
Table: Seat

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| student     | varchar |
+-------------+---------+
id is the primary key (unique value) column for this table.
Each row of this table indicates the name and the ID of a student.
id is a continuous increment.
 

Write a solution to swap the seat id of every two consecutive students. If the number of students is odd, the id of the last student is not swapped.

Return the result table ordered by id in ascending order.

The result format is in the following example.

 

Example 1:

Input: 
Seat table:
+----+---------+
| id | student |
+----+---------+
| 1  | Abbot   |
| 2  | Doris   |
| 3  | Emerson |
| 4  | Green   |
| 5  | Jeames  |
+----+---------+
Output: 
+----+---------+
| id | student |
+----+---------+
| 1  | Doris   |
| 2  | Abbot   |
| 3  | Green   |
| 4  | Emerson |
| 5  | Jeames  |
+----+---------+
Explanation: 
Note that if the number of students is odd, there is no need to change the last one's seat.


Solution 1:

# Write your MySQL query statement below
SELECT
    IF(id < (SELECT COUNT(*) FROM seat), IF(id % 2 = 0, id - 1, id + 1), IF(id % 2 = 0, id - 1, id)) AS id,
    student
FROM seat
ORDER BY id ASC;


Solution 2:

# Write your MySQL query statement below
SELECT ROW_NUMBER() OVER() AS id, student
FROM seat
ORDER BY IF(MOD(id, 2) = 0, id - 1, id + 1);


Solution 3:


# Write your MySQL query statement below
/* Get all the even-numbered rows as odd-numbered rows */
SELECT s1.id - 1 AS id, s1.student
FROM Seat s1
WHERE s1.id % 2 = 0

UNION

/* Get all the odd-numbered rows as even-numbered rows */
SELECT s2.id + 1 AS id, s2.student
FROM Seat s2
WHERE s2.id % 2 = 1 AND s2.id != (SELECT MAX(id) FROM Seat)

UNION

/* Get the last row if it's odd and don't change the ID value */
SELECT s3.id, s3.student
FROM Seat s3
WHERE s3.id % 2 = 1 AND s3.id = (SELECT MAX(id) FROM Seat)

/* Order the result by ID */
ORDER BY id ASC;


Solution 4:

# Write your MySQL query statement below
SELECT
    CASE
        WHEN s.id % 2 <> 0 AND s.id = (SELECT COUNT(*) FROM Seat) THEN s.id
        WHEN s.id % 2 = 0 THEN s.id - 1
        ELSE s.id + 1
    END AS id,
    student
FROM Seat AS s
ORDER BY id;
